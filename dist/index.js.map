{"version":3,"file":"index.js","sources":["../src/Auth/AuthAPI.ts","../src/Auth/AuthSlice.ts","../src/Auth/AuthSaga.ts","../src/index.tsx"],"sourcesContent":["export interface APIInterface {\r\n  authUrl: string;\r\n  APIUrl: string;\r\n}\r\n\r\nconst baseUrl: string = \"https://api.dowcodeploy.com/api\";\r\n\r\nexport const baseApi: APIInterface = {\r\n  get authUrl(): string {\r\n    return `${baseUrl}/auth`;\r\n  },\r\n  get APIUrl(): string {\r\n    return `${baseUrl}`;\r\n  },\r\n};\r\n\r\nexport const apiHelper: object = {\r\n  async toJson(response: any): Promise<any> {\r\n    return response.json();\r\n  },\r\n};\r\n\r\nexport interface AuthAPIInterface {\r\n  postLogin(data: any): Promise<object>;\r\n  postRegister(data: any): Promise<object>;\r\n}\r\n\r\nexport const AuthAPI: AuthAPIInterface = {\r\n  async postLogin(data: any): Promise<object> {\r\n    const postLoginUrl: string = `${baseApi.authUrl}/login`;\r\n    //console.log('[URL FOR postLogin]', postLoginUrl);\r\n\r\n    return fetch(postLoginUrl, {\r\n      method: \"POST\",\r\n      headers: data.headers,\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(data.body),\r\n    });\r\n  },\r\n  async postRegister(data: any): Promise<object> {\r\n    const postRegisterUrl: string = `${baseApi.authUrl}/register`;\r\n    //console.log('[URL FOR postRegister]', postRegisterUrl);\r\n\r\n    return fetch(postRegisterUrl, {\r\n      method: \"POST\",\r\n      headers: data.headers,\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(data.body),\r\n    });\r\n  },\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface AuthState {\r\n  token: string;\r\n  userId: number;\r\n  username: string;\r\n  firstname: string | null;\r\n  lastname: string | null;\r\n  roles: [string];\r\n  error: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  token: \"\",\r\n  userId: 0,\r\n  username: \"\",\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  roles: [\"\"],\r\n  error: \"\",\r\n};\r\n\r\nexport const AuthSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    login: () => {},\r\n    loginSuccess: (state, action: PayloadAction<any>) => {\r\n      console.log(\"!!action\", action);\r\n      state.token = action.payload.token;\r\n      state.userId = action.payload.user.id;\r\n      state.username = action.payload.user.name;\r\n      state.firstname = action.payload.user.firstName;\r\n      state.lastname = action.payload.user.lastName;\r\n      state.roles[0] = action.payload.user.role;\r\n    },\r\n\r\n    register: () => {},\r\n    registerSuccess: () => {},\r\n\r\n    logout: () => {},\r\n\r\n    setAuthFailure: (state, action: PayloadAction<string>) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  login,\r\n  loginSuccess,\r\n  register,\r\n  registerSuccess,\r\n  logout,\r\n  setAuthFailure,\r\n} = AuthSlice.actions;\r\n\r\nexport const selectUser = (state: AuthState) => state;\r\n\r\nexport default AuthSlice.reducer;\r\n","import { takeLatest, delay, put, call, race } from \"redux-saga/effects\";\r\nimport { AuthAPI } from \"./AuthAPI\";\r\nimport {\r\n  login,\r\n  loginSuccess,\r\n  register,\r\n  registerSuccess,\r\n  setAuthFailure,\r\n} from \"./AuthSlice\";\r\n\r\nexport function* loginEffect(action: any): Generator<any, any, any> {\r\n  try {\r\n    const data = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: {\r\n        ...action.payload,\r\n      },\r\n    };\r\n\r\n    const { timeoutDelay, response } = yield race({\r\n      timeoutDelay: delay(10000),\r\n      response: call(AuthAPI.postLogin, data),\r\n    });\r\n\r\n    if (timeoutDelay) {\r\n      yield put(setAuthFailure(\"Server timed out\"));\r\n    }\r\n\r\n    if (response) {\r\n      if (response.status === 200) {\r\n        const responseJson = yield response.json();\r\n        yield put(loginSuccess(responseJson));\r\n      } else {\r\n        const responseJson = yield response.json();\r\n        yield put(setAuthFailure(responseJson));\r\n      }\r\n    }\r\n  } catch (error) {\r\n    yield put(setAuthFailure(error));\r\n  }\r\n}\r\n\r\nexport function* registerEffect(action: any): Generator<any, any, any> {\r\n  try {\r\n    const data = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: {\r\n        ...action.details,\r\n      },\r\n    };\r\n\r\n    const { timeoutDelay, response } = yield race({\r\n      timeoutDelay: delay(10000),\r\n      response: call(AuthAPI.postRegister, data),\r\n    });\r\n\r\n    if (timeoutDelay) {\r\n      yield put(setAuthFailure(\"Server timed out\"));\r\n    }\r\n\r\n    if (response) {\r\n      if (response.status === 200) {\r\n        // const responseJson = yield response.json();\r\n        yield put(registerSuccess());\r\n      } else {\r\n        const responseJson = yield response.json();\r\n        yield put(setAuthFailure(responseJson));\r\n      }\r\n    }\r\n  } catch (error) {\r\n    yield put(setAuthFailure(\"Something went wrong. Try again later.\"));\r\n  }\r\n}\r\n\r\nexport const AuthSaga = [\r\n  takeLatest(login, loginEffect),\r\n  takeLatest(register, registerEffect),\r\n];\r\n","import * as React from \"react\";\r\nimport \"./styles.scss\";\r\nimport { AuthSaga } from \"./Auth/AuthSaga\";\r\nimport { AuthSlice } from \"./Auth/AuthSlice\";\r\n\r\nexport type ITestoProps = {\r\n  title?: string;\r\n};\r\n\r\nconst Testo: React.FC<ITestoProps> = ({ title }) => {\r\n  console.log(\"!!AuthSlice\", AuthSlice);\r\n  console.log(\"!!AuthSaga\", AuthSaga);\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Auth Library + {title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Testo, AuthSlice, AuthSaga };\r\n"],"names":["createSlice","race","delay","call","put","takeLatest","React"],"mappings":"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"}