{"version":3,"file":"index.js","sources":["../src/Auth/AuthAPI.ts","../src/Auth/AuthSlice.ts","../src/Auth/AuthSaga.ts","../src/index.tsx"],"sourcesContent":["export interface APIInterface {\n  authUrl: string;\n  APIUrl: string;\n}\n\nconst baseUrl: string = \"https://api.dowcodeploy.com/api\";\n\nexport const baseApi: APIInterface = {\n  get authUrl(): string {\n    return `${baseUrl}/auth`;\n  },\n  get APIUrl(): string {\n    return `${baseUrl}`;\n  },\n};\n\nexport const apiHelper: object = {\n  async toJson(response: any): Promise<any> {\n    return response.json();\n  },\n};\n\nexport interface AuthAPIInterface {\n  postLogin(data: any): Promise<object>;\n  postRegister(data: any): Promise<object>;\n}\n\nexport const AuthAPI: AuthAPIInterface = {\n  async postLogin(data: any): Promise<object> {\n    const postLoginUrl: string = `${baseApi.authUrl}/login`;\n    //console.log('[URL FOR postLogin]', postLoginUrl);\n\n    return fetch(postLoginUrl, {\n      method: \"POST\",\n      headers: data.headers,\n      credentials: \"same-origin\",\n      body: JSON.stringify(data.body),\n    });\n  },\n  async postRegister(data: any): Promise<object> {\n    const postRegisterUrl: string = `${baseApi.authUrl}/register`;\n    //console.log('[URL FOR postRegister]', postRegisterUrl);\n\n    return fetch(postRegisterUrl, {\n      method: \"POST\",\n      headers: data.headers,\n      credentials: \"same-origin\",\n      body: JSON.stringify(data.body),\n    });\n  },\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface AuthState {\n  token: string;\n  userId: number;\n  username: string;\n  firstname: string | null;\n  lastname: string | null;\n  roles: [string];\n  error: string;\n}\n\nconst initialState: AuthState = {\n  token: \"\",\n  userId: 0,\n  username: \"\",\n  firstname: \"\",\n  lastname: \"\",\n  roles: [\"\"],\n  error: \"\",\n};\n\nexport const AuthSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login: () => {},\n    loginSuccess: (state, action: PayloadAction<any>) => {\n      console.log(\"!!action\", action);\n      state.token = action.payload.token;\n      state.userId = action.payload.user.id;\n      state.username = action.payload.user.name;\n      state.firstname = action.payload.user.firstName;\n      state.lastname = action.payload.user.lastName;\n      state.roles[0] = action.payload.user.role;\n    },\n\n    register: () => {},\n    registerSuccess: () => {},\n\n    logout: () => {},\n\n    setAuthFailure: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  login,\n  loginSuccess,\n  register,\n  registerSuccess,\n  logout,\n  setAuthFailure,\n} = AuthSlice.actions;\n\nexport const selectUser = (state: AuthState) => state;\n\nexport default AuthSlice.reducer;\n","import { takeLatest, delay, put, call, race } from \"redux-saga/effects\";\nimport { AuthAPI } from \"./AuthAPI\";\nimport {\n  login,\n  loginSuccess,\n  register,\n  registerSuccess,\n  setAuthFailure,\n} from \"./AuthSlice\";\n\nexport function* loginEffect(action: any): Generator<any, any, any> {\n  try {\n    const data = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: {\n        ...action.payload,\n      },\n    };\n\n    const { timeoutDelay, response } = yield race({\n      timeoutDelay: delay(10000),\n      response: call(AuthAPI.postLogin, data),\n    });\n\n    if (timeoutDelay) {\n      yield put(setAuthFailure(\"Server timed out\"));\n    }\n\n    if (response) {\n      if (response.status === 200) {\n        const responseJson = yield response.json();\n        yield put(loginSuccess(responseJson));\n      } else {\n        const responseJson = yield response.json();\n        yield put(setAuthFailure(responseJson));\n      }\n    }\n  } catch (error) {\n    yield put(setAuthFailure(error));\n  }\n}\n\nexport function* registerEffect(action: any): Generator<any, any, any> {\n  try {\n    const data = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: {\n        ...action.details,\n      },\n    };\n\n    const { timeoutDelay, response } = yield race({\n      timeoutDelay: delay(10000),\n      response: call(AuthAPI.postRegister, data),\n    });\n\n    if (timeoutDelay) {\n      yield put(setAuthFailure(\"Server timed out\"));\n    }\n\n    if (response) {\n      if (response.status === 200) {\n        // const responseJson = yield response.json();\n        yield put(registerSuccess());\n      } else {\n        const responseJson = yield response.json();\n        yield put(setAuthFailure(responseJson));\n      }\n    }\n  } catch (error) {\n    yield put(setAuthFailure(\"Something went wrong. Try again later.\"));\n  }\n}\n\nexport const AuthSaga = [\n  takeLatest(login, loginEffect),\n  takeLatest(register, registerEffect),\n];\n","import * as React from \"react\";\nimport \"./styles.scss\";\nimport { AuthSaga } from \"./Auth/AuthSaga\";\nimport { AuthSlice } from \"./Auth/AuthSlice\";\n\nexport type ICounterProps = {\n  authSlice: any;\n  test: any;\n};\n\nconst Testo: React.FC<ICounterProps> = () => {\n  console.log(\"!!Hello\");\n  console.log(\"!!AuthSlice\", AuthSlice);\n\n  return (\n    <div>\n      <h1>My Auth Library</h1>\n    </div>\n  );\n};\n\nexport { Testo, AuthSlice, AuthSaga };\n"],"names":["createSlice","race","delay","call","put","takeLatest","React"],"mappings":"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"}